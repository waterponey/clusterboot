---
- user:
    name: hdfs
    group: hadoop
    createhome: no
    system: yes

- name: Add HADOOP_CONF_DIR as environment variable
  lineinfile:
    dest: /etc/profile
    line: "export HADOOP_CONF_DIR={{ hadoop_conf_dir }}"

- name: Write configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ hadoop_conf_dir }}/{{ item }}"
    owner: hadoop
    group: hadoop
  with_items:
    - hadoop-env.sh
    - core-site.xml
    - hdfs-site.xml
    - log4j.properties
    - slaves
    - masters

- name: Add hadoop binaries in PATH
  lineinfile:
    dest: /etc/profile
    line: 'export PATH={{ hadoop_home }}/bin:{{ hadoop_home }}/sbin:$PATH'

- name: Create Namenode data directory
  file:
    path: "{{ item }}"
    state: directory
    owner: hdfs
    group: hadoop
    recurse: yes
    mode: 0700
  with_items: "{{ namenode_dirs }}"
  when: "inventory_hostname == namenode_hostname"

- name: Create Secondary Namenode data directory
  file:
    path: "{{ item }}"
    state: directory
    owner: hdfs
    group: hadoop
    recurse: yes
    mode: 0700
  with_items: "{{ secondnn_dirs }}"
  when: "inventory_hostname == secondnn_hostname"

- name: Ensure HDFS state information directory exists
  file:
    path: "{{ hdfs_workdir }}"
    state: directory
    owner: hdfs
    group: hadoop
    mode: 0755

- name: Add Namenode service file
  template:
    src: namenode.service.j2
    dest: /etc/systemd/system/namenode.service
  when: "inventory_hostname == namenode_hostname"

- name: Add Secondary Namenode service file
  template:
    src: secondary-namenode.service.j2
    dest: /etc/systemd/system/secondary-namenode.service
  when: "inventory_hostname == secondary_namenode_hostname"

- name: Create Datanode data directory
  file:
    path: "{{ item }}"
    state: directory
    owner: hdfs
    group: hadoop
    recurse: yes
    mode: 0700
  with_items: "{{ datanode_dirs }}"
  when: "'slaves' in group_names"

- name: Add Datanode service file
  template:
    src: datanode.service.j2
    dest: /etc/systemd/system/datanode.service
  when: "'slaves' in group_names"

- name: Format Namenode
  shell: "{{ hadoop_home }}/bin/hdfs namenode -format"
  become_user: hdfs
  when:
    - "inventory_hostname == namenode_hostname"
    - bootstrap == True

- name: Start Namenode
  service:
    name: namenode
    enabled: yes
    state: started
  when: "inventory_hostname == namenode_hostname"

- name: Start Secondary Namenode
  service:
    name: secondary-namenode
    enabled: yes
    state: started
  when: "inventory_hostname == secondary_namenode_hostname"

- name: Start Datanode
  service:
    name: datanode
    enabled: yes
    state: started
  when: "'slaves' in group_names"

- name: Add Hadoop user to group
  user:
    name: "{{ item }}"
    append: yes
    groups: hadoop
  with_items: "{{ hadoop_users }}"

- name: Create base directories
  shell: "{{ hadoop_home }}/bin/hadoop fs -mkdir {{ item }}"
  become_user: hdfs
  when:
    - "inventory_hostname == namenode_hostname"
    - bootstrap == True
  with_items:
    - /shared
    - /tmp
    - /user
    - /var

- name: Create user directories
  shell: "{{ hadoop_home }}/bin/hadoop fs -mkdir /user/{{ item }}"
  become_user: "{{ item }}"
  when:
    - "inventory_hostname == namenode_hostname"
    - bootstrap == True
  with_items: "{{ hadoop_users }}"
